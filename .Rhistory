)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract"
)
word_count %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article"
)
word_count %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\n
Blue lines represent one and a half standard deviations from the mean number of filtered words in abstract"
)
word_count %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations from the mean number of filtered words in abstract"
)
word_count %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
)
word_count
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(angle = 30, hjust = 0.5)
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(angle = 0, hjust = 0.5)
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(hjust = 0.5)
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced to in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(hjust = 0.5)
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(hjust = 0.5)
)
word_count %>%
group_by(gene_type) %>%
mutate(
gene_type = paste0(gene_type, "\n(n=", n(), ")")
) %>%
ggplot(
aes(
x = count,
y = gene_type
)
) +
geom_boxplot() +
geom_vline(
xintercept = mean(word_count$count),
colour = "red",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) + 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
geom_vline(
xintercept = mean(word_count$count) - 1.5*sd(word_count$count),
colour = "blue",
linetype = 2,
size = 0.6
) +
scale_x_log10() +
theme_bw() +
guides(
fill = "none"
) +
labs(
x = "Number of Filtered Words in Abstract",
y = "Type of Gene Referenced in Article",
caption = "Red line represents the mean number of filtered words in abstract\nBlue lines represent one and a half standard deviations\nfrom the mean number of filtered words in abstract"
) +
theme(
axis.text.y = element_text(hjust = 0.5)
)
